#include <map>
#include <string>
#include <vector>


struct output {
    std::map<int, std::string> weather_message = {
        {0, "Clear sky"},
        {1, "Mainly clear"},
        {2, "Mainly partly, cloudy"},
        {3, "Mainly clear, overcast"},
        {45, "Fog and depositing rime fog"},
        {48, "Fog and depositing rime fog"},
        {51, "Drizzle: Light"},
        {53, "Drizzle: moderate"},
        {55, "Drizzle: dense intensity"},
        {56, "Freezing Drizzle: Light"},
        {57, "Freezing Drizzle: dense intensity"},
        {61, "Rain: Slight"},
        {63, "Rain: moderate"},
        {65, "Rain: heavy intensity"},
        {66, "Freezing Rain: Light"},
        {67, "Freezing Rain: heavy intensity"},
        {71, "Snow fall: Slight"},
        {73, "Snow fall: moderate"},
        {75, "Snow fall: heavy intensity"},
        {77, "Snow grains"},
        {80, "Rain showers: Slight"},
        {81, "Rain showers: moderate"},
        {82, "Rain showers: violent"},
        {85, "Snow showers slight"},
        {86, "Snow showers heavy"},
        {95, "Thunderstorm: Slight or moderate"},
        {96, "Thunderstorm with slight hail"},
        {99, "Thunderstorm with heavy hail}"}
    };

    std::map<int, std::vector<std::string>> weather_image{
        {0,    {"    \\   /    ", 
                "     .-.     ", 
                "  ― (   ) ―  ", 
                "     `-'     ", 
                "    /   \\    "}},

        {1,     {"    \\  /     ",
                "  _ /\"\".-.   ", 
                "    \\_(   ). ",
                "    /(___(__)", 
                "             " }},
        
        {2,    {"    \\  /     ",
                "  _ /\"\".-.   ", 
                "    \\_(   ). ",
                "    /(___(__)", 
                "             " }},

        {3,    {"    \\  /     ",
                "  _ /\"\".-.   ", 
                "    \\_(   ). ",
                "    /(___(__)", 
                "             " }},

        {45,   {"             ",
                "  _ - _ - _ -",
                "   _ - _ - _ ",
                "  _ - _ - _ -",
                "             " }},

        {48,   {"             ",
                "  _ - _ - _ -",
                "   _ - _ - _ ",
                "  _ - _ - _ -",
                "             " }},

        {51,   {"     .-.     ",
                "    (   ).   ",
                "   (___(__)  ",
                "    ' ' ' '  ",
                "   ' ' ' '   " }},

        {53,    {"    .-.     ",
                "    (   ).   ",
                "   (___(__)  ",
                "    ' ' ' '  ",
                "   ' ' ' '   "}},

        {55,    {"     .-.     ",
                "    (   ).   ",
                "   (___(__)  ",
                "    ' ' ' '  ",
                "   ' ' ' '   "}},
        
        {56,   {"     .-.     ",
                "    (   ).   ",
                "   (___(__)  ",
                "    ' * ' *  ",
                "   * ' * '   "}},

        {57,   {"     .-.     ",
                "    (   ).   ",
                "   (___(__)  ",
                "    ' * ' *  ",
                "   * ' * '   "}},

        {61,   {"     .-.     ",
                "    (   ).   ",
                "   (___(__)  ",
                "    ‘ ‘ ‘ ‘  ",
                "   ‘ ‘ ‘ ‘   "}},

        {63,   {"     .-.     ",
                "    (   ).   ",
                "   (___(__)  ",
                "   ‚‘‚‘‚‘‚‘  ",
                "  ‚’‚’‚’‚’   "}},
        
        {65,   {"     .-.     ",
                "    (   ).   ",
                "   (___(__)  ",
                "   ‚‘‚‘‚‘‚‘  ",
                "  ‚’‚’‚’‚’   "}},

        {66,   {"     .-.     ",
                "    (   ).   ",
                "   (___(__)  ",
                "    ' * ' *  ",
                "   * ' * '   "}},
        
        {67,   {"     .-.     ",
                "    (   ).   ",
                "   (___(__)  ",
                "    ' * ' *  ",
                "   * ' * '   "}},

        {71,   {"     .-.     ",
                "    (   ).   ",
                "   (___(__)  ",
                "    *  *  *  ",
                "   *  *  *   "}},

        {73,   {"     .-.     ",
                "    (   ).   ",
                "   (___(__)  ",
                "    * * * *  ",
                "   * * * *   "}},

        {75,   {"     .-.     ",
                "    (   ).   ",
                "   (___(__)  ",
                "    * * * *  ",
                "   * * * *   "}},

        {77,   {"     .-.     ",
                "    (   ).   ",
                "   (___(__)  ",
                "   (*)(*)(*) ",
                "  (*)(*)(*)  "}},

        {80,   {" _`/\"\".-.    ",
                "  ,\\_(   ).  ",
                "   /(___(__) ",
                "     ‘ ‘ ‘ ‘ ",
                "    ‘ ‘ ‘ ‘  "}},
            
        {81,   {" _`/\"\".-.    ",
                "  ,\\_(   ).  ",
                "   /(___(__) ",
                "   ‚‘‚‘‚‘‚‘  ",
                "   ‚’‚’‚’‚’  "}},

        {82,    {" _`/\"\".-.    ",
                "  ,\\_(   ).  ",
                "   /(___(__) ",
                "   ‚‘‚‘‚‘‚‘  ",
                "   ‚’‚’‚’‚’  "}},

        {85,   {" _`/\"\".-.    ",
                "  ,\\_(   ).  ",
                "   /(___(__) ",
                "     *  *  * ",
                "    *  *  *  "}},

        {86,   {" _`/\"\".-.    ",
                "  ,\\_(   ).  ",
                "   /(___(__) ",
                "     * * * * ",
                "    * * * *  "}},

        {95,   {"     .-.     ",
                "    (   ).   ",
                "   (___(__)  ",
                "   ⚡''⚡''  ",
                "  ‘ ‘ ‘ ‘    "}}, 

        {96,   {"     .-.     ",
                "    (   ).   ",
                "   (___(__)  ",
                "   ⚡*⚡*  ",
                "  * * * *   "}},
        {99,   {"     .-.     ",
                "    (   ).   ",
                "   (___(__)  ",
                "   ⚡*⚡*  ",
                "  * * * *   "}}
    };
};
